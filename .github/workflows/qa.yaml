name: QA

on:
    push:
        branches: ["main"]
    pull_request:
        branches: ["main"]

permissions:
    contents: read

jobs:
    build-twitch-api-and-run-functionals:
        runs-on: ubuntu-latest

        steps:
            -   uses: ./github/actions/setup-job

            -   name: Build the Docker image
                run: docker build . --file tests/Dockerfile --tag twitch-cli:latest

            -   name: Run Twitch Mock API
                run: docker run --name twitch-mock-api -p 8000:8080 -d twitch-cli:latest

            # This is just a dirty workaround. I'd like to have a script here, that tries every second to reach the mock api
            -   name: Wait for container to generate mock data
                run: sleep 10

            -   name: Execute tests (Unit and Functional tests) via PHPUnit
                run: vendor/bin/phpunit --testsuite Functional --coverage-clover functional.xml

            -   name: Upload coverage reports to Codecov
                uses: codecov/codecov-action@v3
                with:
                    flags: 'functional'
                    files: ./functional.xml
                env:
                    CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

            -   name: Stop and remove Docker container
                if: always()
                run: docker stop twitch-mock-api && docker rm twitch-mock-api

    run-phpstan:
        runs-on: ubuntu-latest

        steps:
            -   uses: ./github/actions/setup-job

            -   name: PHPStan code analysis
                run: vendor/bin/phpstan analyse

    run-php-cs-fixer:
        runs-on: ubuntu-latest

        steps:
            -   uses: ./github/actions/setup-job

            -   name: Check for PHP codestyle compliance
                run: vendor/bin/php-cs-fixer check --allow-risky=yes

    run-unit-tests:
        runs-on: ubuntu-latest

        steps:
            -   uses: ./github/actions/setup-job

            -   name: Execute tests (Unit and Functional tests) via PHPUnit
                run: vendor/bin/phpunit --testsuite Functional --coverage-clover functional.xml

            -   name: Upload coverage reports to Codecov
                uses: codecov/codecov-action@v3
                with:
                    flags: 'functional'
                    files: ./functional.xml
                env:
                    CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}


